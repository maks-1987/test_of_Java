package Enum;
/**
 * Есть два ограничения относительно перечислений. Во-первых, перечисление
 * не может наследоваться от другого класса. Во-вторых, перечисление не
 * может быть суперклассом. Это значит, что перечисление не может быть
 * расширено. Во всем остальном перечисление ведет себя, как любой другой
 * тип класса. Ключевой момент — помнить, что каждая константа перечисления
 * является объектом класса, в котором она определена. Хотя вы не можете
 * наследовать суперкласс при объявлении перечисления, все перечисления
 * автоматически наследуют класс "java.1ang.Enum". Этот класс определяет
 * несколько методов, доступных к использованию всеми перечислениями.
 * 'final int ordinal()'- возвращ порядковое значение вызывающей константы
 * порядок начин с нуля. 'final int compareTo(тип_перечисления е)'- сравнение
 * порядковых значений двух констант одного и тогоже перечисления.
 * 'equals()'- cравнение на эквивалентность перечислимую константу с
 * любым другим объектом (переопределен метод 'equals()' класа 'Object').
 * Можно сравнить две ссылки перечислений на эквивалентность оператором'=='
 *
 */
class EnumDemo3 {
    public static void main(String args[]) {
        Apple2 ap;
        // Отобразить цену Winesap.
        System.out.println("Winesap стоит " +
                Apple2.Winesap.getPrice() + " центов.\n");
        // Отобразить цены всех сортов яблок.
        System.out.println("Все цены яблок:");
        for(Apple2 a : Apple2.values())
            System.out.println(a + " стоит " + a.getPrice() + " центов.");
    }
}/*
>>>     Winesap стоит 15 центов.

        Все цены яблок:
        Jonathan стоит 10 центов.
        GoldenDel стоит 9 центов.
        RedDel стоит 12 центов.
        Winesap стоит 15 центов.
        Cortland стоит 8 центов.
*/