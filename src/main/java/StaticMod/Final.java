package StaticMod;

public class Final {
    final int value = 10;
/**
 *  Финал-переменную нельзя изменить, используют для создания констант
 *  Если класс помечается как final, то ни один класс не может
 *  наследовать любую функцию из класса final. Главным намерение сделать
 *  метод final будет то, что содержание метода не должно быть
 *  изменено на стороне.  Статич. методы и перем. привязаны не к объектам
 *  класса, а непосредственно к самому классу. Если создать 10 объектов
 *  класса, у нас будет 10 перем. класса и только ОДНА общая static - перем.
 *  При вызове метода в виде "объект"."имяМетода", на самом деле вызывается
 *  методКласса, в который первым аргументом передается тот самый объект.
 *  Внутри метода он получает имя this. Именно с ним и его данными происходят
 *  все действия. При вызове статичес. метода никакого объекта внутрь не
 *  передается, т. е. this = null, поэтому static-метод НЕ ИМЕЕТ ДОСТУПА к
 *  нестатичес. переменным и методам (ему нечего передавать в такие методы
 *  в качестве this). Ниже приведены примеры объявления констант:
*/
    public static final int BOXWIDTH = 6;
    static final String TITLE = "Менеджер";

    public void changeValue() {
        //value = 12; //будет получена ошибка
    }
}
