package Overloads;

/**
 * Метод test() перегружается четыре раза. Первая версия не принимает
 * никаких параметров, вторая принимает один целочисленный параметр,
 * третья — два целочисленных параметра, а четвертая — один параметр
 * типа double. То, что четвертая версия метода test() возвращает также
 * значение, не имеет никакого значения для перегрузки, поскольку
 * возвращаемый тип никак не влияет на поиск перегруженной версии метода.
 * Перегрузка методов обеспечивает полиморфизм, поскольку это один из
 * способов реализации в Java концепции “один интерфейс, несколько методов”.
 * Следует перегружать только тесно связанные операции.
 */

class OverloadDemo {
    void test() {
        System.out.println("Параметры отсутствуют");
    }
    // Проверка перегрузки на наличие одного целочисленного параметра.
    void test(int а) {
        System.out.println("а: " + а);
    }
    // Проверка перегрузки на наличие двух целочисленных параметров
    void test(int a, int b) {
        System.out.println("а и b: " + a + " " + b) ;
    }
    // Проверка перегрузки на наличие параметра типа double
    double test(double a) {
        System.out.println("double a: " + a);
        return a*a;
    }
}
