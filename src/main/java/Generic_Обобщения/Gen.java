package Generic_Обобщения;
/**
 * Обобщения (Generics) — это параметризованные типы. Эти типы важны, поскольку
 * позволяют объявлять классы, интерфейсы и методы, где тип данных,
 * которыми они оперируют, указан в виде параметра.
 *  Используя обобщения, можно создать единственный класс, который, например,
 * будет автоматически работать с разными типами данных. Классы, интерфейсы или
 * методы, имеющие дело с параметризованными типами, называются - обобщениями,
 * обобщенными классами или обобщенными методами. Когда объявляется экземпляр
 * обобщенного типа, аргумент, переданный в качестве параметра типа, должен быть
 * типом класса. Нельзя использовать элементарный тип вроде int или char. Ссылка
 * на одну специфическую версию обобщенного типа не совместима с другой версией
 * того же обобщенного типа.
 * Благодаря обобщениям, например, не нужно делать конструкторы разного типа данн.
 * для вызова их из других классов (см. строки 19, 27 класса GenDemo)
 */
// Простой обобщенный класс. Здесь Т — это параметр типа, который будет
// заменен реальным типом при создании объекта класса Gen.
class Gen<T> {
    T ob;// объявление объекта типа Т

    // Передать конструктору ссылку на объект типа Т.
    Gen(T о) {
        ob = о;
    }
    // Вернуть ob.
    T getOb() {
        return ob;
    }
    // Показать тип Т.
    void showType()  {
        System.out.println("Типом T является "+ ob.getClass().getName());
    }
}